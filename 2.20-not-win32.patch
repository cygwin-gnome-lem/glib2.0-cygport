--- origsrc/glib-2.20.0/gio/tests/live-g-file.c	2009-03-12 23:09:51.000000000 -0500
+++ src/glib-2.20.0/gio/tests/live-g-file.c	2009-03-14 22:14:36.578125000 -0500
@@ -1124,7 +1124,7 @@ main (int argc, char *argv[])
 	  write_test = TRUE;
 	  only_create_struct = FALSE;
 	  target_path = DEFAULT_TEST_DIR;
-#ifdef G_PLATFORM_WIN32
+#ifdef G_OS_WIN32
 	  posix_compat = FALSE;
 #else
 	  posix_compat = TRUE;
--- origsrc/glib-2.20.0/glib/gatomic.c	2009-03-12 23:09:59.000000000 -0500
+++ src/glib-2.20.0/glib/gatomic.c	2009-03-14 22:16:39.343750000 -0500
@@ -777,7 +777,7 @@ g_atomic_int_add (volatile gint G_GNUC_M
 #  define DEFINE_WITH_MUTEXES
 # endif /* G_ATOMIC_* */
 #else /* !__GNUC__ */
-# ifdef G_PLATFORM_WIN32
+# ifdef G_OS_WIN32
 #  define DEFINE_WITH_WIN32_INTERLOCKED
 # else
 #  define DEFINE_WITH_MUTEXES
--- origsrc/glib-2.20.3/glib/gconvert.c	2009-03-31 18:04:20.000000000 -0500
+++ src/glib-2.20.3/glib/gconvert.c	2009-05-31 01:30:21.933166200 -0500
@@ -38,9 +38,6 @@
 
 #ifdef G_OS_WIN32
 #include "win_iconv.c"
-#endif
-
-#ifdef G_PLATFORM_WIN32
 #define STRICT
 #include <windows.h>
 #undef STRICT
@@ -1119,7 +1116,7 @@ g_locale_from_utf8 (const gchar *utf8str
 		      charset, "UTF-8", bytes_read, bytes_written, error);
 }
 
-#ifndef G_PLATFORM_WIN32
+#ifndef G_OS_WIN32
 
 typedef struct _GFilenameCharsetCache GFilenameCharsetCache;
 
@@ -1235,7 +1232,7 @@ g_get_filename_charsets (G_CONST_RETURN 
   return cache->is_utf8;
 }
 
-#else /* G_PLATFORM_WIN32 */
+#else /* G_OS_WIN32 */
 
 gboolean
 g_get_filename_charsets (G_CONST_RETURN gchar ***filename_charsets) 
@@ -1264,7 +1261,7 @@ g_get_filename_charsets (G_CONST_RETURN 
 #endif
 }
 
-#endif /* G_PLATFORM_WIN32 */
+#endif /* G_OS_WIN32 */
 
 static gboolean
 get_filename_charset (const gchar **filename_charset)
--- origsrc/glib-2.20.3/glib/glib.h	2009-05-29 00:06:29.000000000 -0500
+++ src/glib-2.20.3/glib/glib.h	2009-05-31 01:30:27.754499100 -0500
@@ -84,7 +84,7 @@
 #include <glib/gunicode.h>
 #include <glib/gurifuncs.h>
 #include <glib/gutils.h>
-#ifdef G_PLATFORM_WIN32
+#ifdef G_OS_WIN32
 #include <glib/gwin32.h>
 #endif
 
--- origsrc/glib-2.20.0/glib/gutf8.c	2009-03-12 23:09:59.000000000 -0500
+++ src/glib-2.20.0/glib/gutf8.c	2009-03-14 22:18:50.937500000 -0500
@@ -29,7 +29,7 @@
 
 #include "glib.h"
 
-#ifdef G_PLATFORM_WIN32
+#ifdef G_OS_WIN32
 #include <stdio.h>
 #define STRICT
 #include <windows.h>
--- origsrc/glib-2.20.0/glib/gutils.c	2009-03-12 23:09:59.000000000 -0500
+++ src/glib-2.20.0/glib/gutils.c	2009-03-14 22:47:54.734375000 -0500
@@ -73,7 +73,7 @@
 #define G_PATH_LENGTH   2048
 #endif
 
-#ifdef G_PLATFORM_WIN32
+#ifdef G_OS_WIN32
 #  define STRICT		/* Strict typing, please */
 #  include <windows.h>
 #  undef STRICT
@@ -82,9 +82,6 @@
 #    define GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS 4
 #  endif
 #  include <lmcons.h>		/* For UNLEN */
-#endif /* G_PLATFORM_WIN32 */
-
-#ifdef G_OS_WIN32
 #  include <direct.h>
 #  include <shlobj.h>
    /* older SDK (e.g. msvc 5.0) does not have these*/
@@ -126,7 +123,7 @@ const guint glib_micro_version = GLIB_MI
 const guint glib_interface_age = GLIB_INTERFACE_AGE;
 const guint glib_binary_age = GLIB_BINARY_AGE;
 
-#ifdef G_PLATFORM_WIN32
+#ifdef G_OS_WIN32
 
 static HMODULE glib_dll = NULL;
 
@@ -827,7 +824,7 @@ g_path_skip_root (const gchar *file_name
 {
   g_return_val_if_fail (file_name != NULL, NULL);
   
-#ifdef G_PLATFORM_WIN32
+#ifdef G_OS_WIN32
   /* Skip \\server\share or //server/share */
   if (G_IS_DIR_SEPARATOR (file_name[0]) &&
       G_IS_DIR_SEPARATOR (file_name[1]) &&
@@ -837,13 +834,11 @@ g_path_skip_root (const gchar *file_name
       gchar *p;
 
       p = strchr (file_name + 2, G_DIR_SEPARATOR);
-#ifdef G_OS_WIN32
       {
 	gchar *q = strchr (file_name + 2, '/');
 	if (p == NULL || (q != NULL && q < p))
 	  p = q;
       }
-#endif
       if (p &&
 	  p > file_name + 2 &&
 	  p[1])
@@ -3021,7 +3021,7 @@ guess_category_value (const gchar *categ
   if ((retval != NULL) && (retval[0] != '\0'))
     return retval;
 
-#ifdef G_PLATFORM_WIN32
+#ifdef G_OS_WIN32
   /* g_win32_getlocale() first checks for LC_ALL, LC_MESSAGES and
    * LANG, which we already did above. Oh well. The main point of
    * calling g_win32_getlocale() is to get the thread's locale as used
--- origsrc/glib-2.20.0/glib/gutils.h	2009-03-12 23:09:59.000000000 -0500
+++ src/glib-2.20.0/glib/gutils.h	2009-03-14 22:48:29.625000000 -0500
@@ -454,7 +454,7 @@ G_END_DECLS
  * On non-Windows platforms, expands to nothing.
  */
 
-#ifndef G_PLATFORM_WIN32
+#ifndef G_OS_WIN32
 # define G_WIN32_DLLMAIN_FOR_DLL_NAME(static, dll_name)
 #else
 # define G_WIN32_DLLMAIN_FOR_DLL_NAME(static, dll_name)			\
@@ -482,6 +482,6 @@ DllMain (HINSTANCE hinstDLL,						\
 
 #endif	/* !G_DISABLE_DEPRECATED */
 
-#endif /* G_PLATFORM_WIN32 */
+#endif /* G_OS_WIN32 */
 
 #endif /* __G_UTILS_H__ */
--- origsrc/glib-2.20.3/glib/gwin32.h	2009-03-31 18:04:20.000000000 -0500
+++ src/glib-2.20.3/glib/gwin32.h	2009-05-31 01:27:34.933614300 -0500
@@ -33,7 +33,7 @@
 
 #include <glib/gtypes.h>
 
-#ifdef G_PLATFORM_WIN32
+#ifdef G_OS_WIN32
 
 G_BEGIN_DECLS
 
@@ -41,8 +41,6 @@ G_BEGIN_DECLS
 #define MAXPATHLEN 1024
 #endif
 
-#ifdef G_OS_WIN32
-
 /*
  * To get prototypes for the following POSIXish functions, you have to
  * include the indicated non-POSIX headers. The functions are defined
@@ -67,7 +65,6 @@ G_BEGIN_DECLS
  */
 gint		g_win32_ftruncate	(gint		 f,
 					 guint		 size);
-#endif /* G_OS_WIN32 */
 
 /* The MS setlocale uses locale names of the form "English_United
  * States.1252" etc. We want the Unixish standard form "en", "zh_TW"
@@ -109,6 +106,6 @@ gchar*          g_win32_locale_filename_
 
 G_END_DECLS
 
-#endif	 /* G_PLATFORM_WIN32 */
+#endif	 /* G_OS_WIN32 */
 
 #endif /* __G_WIN32_H__ */
--- origsrc/glib-2.20.3/tests/Makefile.am	2009-05-29 00:06:30.000000000 -0500
+++ src/glib-2.20.3/tests/Makefile.am	2009-05-31 02:27:23.889890900 -0500
@@ -28,7 +28,9 @@ libadd_libgmodule = $(libgmodule)
 libadd_libglib = $(libglib)
 if PLATFORM_WIN32
 no_undefined = -no-undefined
+endif
 
+if OS_WIN32
 module_test_exp = module-test.exp
 
 module-test.exp: module-test.o
--- origsrc/glib-2.20.3/tests/mainloop-test.c	2009-05-31 01:22:04.305703500 -0500
+++ src/glib-2.20.3/tests/mainloop-test.c	2009-05-31 01:32:20.359939800 -0500
@@ -9,7 +9,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 
-#ifdef G_PLATFORM_WIN32
+#ifdef G_OS_WIN32
 #include <fcntl.h>		/* For _O_BINARY used by pipe() macro */
 #include <io.h>			/* for _pipe() */
 #define pipe(fds) _pipe(fds, 4096, _O_BINARY)
--- origsrc/glib-2.20.3/tests/testglib.c	2009-04-08 09:10:15.000000000 -0500
+++ src/glib-2.20.3/tests/testglib.c	2009-05-31 01:53:02.731999400 -0500
@@ -738,7 +738,7 @@ test_info (void)
   
   if (g_test_verbose())
     {
-#ifdef G_PLATFORM_WIN32
+#ifdef G_OS_WIN32
       gchar *glib_dll;
 #endif
       const gchar *charset;
@@ -747,14 +747,9 @@ test_info (void)
       else
         g_print ("current charset is not UTF-8: %s\n", charset);
 
-#ifdef G_PLATFORM_WIN32
 #ifdef G_OS_WIN32
       /* Can't calculate GLib DLL name at runtime. */
       glib_dll = "libglib-2.0-0.dll";
-#endif
-#ifdef G_WITH_CYGWIN
-      glib_dll = "cygglib-2.0-0.dll";
-#endif
 
       g_print ("current locale: %s\n", g_win32_getlocale ());
       g_print ("GLib DLL name tested for: %s\n", glib_dll);
--- origsrc/glib-2.20.3/tests/uri-test.c	2009-03-31 18:04:21.000000000 -0500
+++ src/glib-2.20.3/tests/uri-test.c	2009-05-31 01:32:00.534805900 -0500
@@ -61,7 +61,7 @@ to_uri_tests[] = {
   { "c:\\windows", "otherhost", NULL, G_CONVERT_ERROR_NOT_ABSOLUTE_PATH},
 #endif
   { "etc", "localhost", NULL, G_CONVERT_ERROR_NOT_ABSOLUTE_PATH},
-#ifndef G_PLATFORM_WIN32
+#ifndef G_OS_WIN32
   { "/etc/\xE5\xE4\xF6", NULL, "file:///etc/%E5%E4%F6" },
   { "/etc/\xC3\xB6\xC3\xA4\xC3\xA5", NULL, "file:///etc/%C3%B6%C3%A4%C3%A5"},
 #endif
