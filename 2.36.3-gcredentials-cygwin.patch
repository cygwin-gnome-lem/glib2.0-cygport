--- origsrc/glib-2.36.3/gio/gcredentials.c	2013-08-04 20:09:01.948462300 -0500
+++ src/glib-2.36.3/gio/gcredentials.c	2013-08-04 18:11:14.000000000 -0500
@@ -77,7 +77,7 @@ struct _GCredentials
   /*< private >*/
   GObject parent_instance;
 
-#ifdef __linux__
+#if defined(__linux__) || defined(__CYGWIN__)
   struct ucred native;
 #elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
   struct cmsgcred native;
@@ -127,7 +127,7 @@ g_credentials_class_init (GCredentialsCl
 static void
 g_credentials_init (GCredentials *credentials)
 {
-#ifdef __linux__
+#if defined(__linux__) || defined(__CYGWIN__)
   credentials->native.pid = getpid ();
   credentials->native.uid = geteuid ();
   credentials->native.gid = getegid ();
@@ -183,7 +183,7 @@ g_credentials_to_string (GCredentials *c
   g_return_val_if_fail (G_IS_CREDENTIALS (credentials), NULL);
 
   ret = g_string_new ("GCredentials:");
-#ifdef __linux__
+#if defined(__linux__) || defined(__CYGWIN__)
   g_string_append (ret, "linux-ucred:");
   if (credentials->native.pid != -1)
     g_string_append_printf (ret, "pid=%" G_GINT64_FORMAT ",", (gint64) credentials->native.pid);
@@ -248,7 +248,7 @@ g_credentials_is_same_user (GCredentials
   g_return_val_if_fail (error == NULL || *error == NULL, FALSE);
 
   ret = FALSE;
-#ifdef __linux__
+#if defined(__linux__) || defined(__CYGWIN__)
   if (credentials->native.uid == other_credentials->native.uid)
     ret = TRUE;
 #elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
@@ -296,7 +296,7 @@ g_credentials_get_native (GCredentials
 
   ret = NULL;
 
-#ifdef __linux__
+#if defined(__linux__) || defined(__CYGWIN__)
   if (native_type != G_CREDENTIALS_TYPE_LINUX_UCRED)
     {
       g_warning ("g_credentials_get_native: Trying to get credentials of type %d but only "
@@ -357,7 +357,7 @@ g_credentials_set_native (GCredentials
                           GCredentialsType  native_type,
                           gpointer          native)
 {
-#ifdef __linux__
+#if defined(__linux__) || defined(__CYGWIN__)
   if (native_type != G_CREDENTIALS_TYPE_LINUX_UCRED)
     {
       g_warning ("g_credentials_set_native: Trying to set credentials of type %d "
@@ -424,7 +424,7 @@ g_credentials_get_unix_user (GCredential
   g_return_val_if_fail (G_IS_CREDENTIALS (credentials), -1);
   g_return_val_if_fail (error == NULL || *error == NULL, -1);
 
-#ifdef __linux__
+#if defined(__linux__) || defined(__CYGWIN__)
   ret = credentials->native.uid;
 #elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
   ret = credentials->native.cmcred_euid;
@@ -466,7 +466,7 @@ g_credentials_get_unix_pid (GCredentials
   g_return_val_if_fail (G_IS_CREDENTIALS (credentials), -1);
   g_return_val_if_fail (error == NULL || *error == NULL, -1);
 
-#ifdef __linux__
+#if defined(__linux__) || defined(__CYGWIN__)
   ret = credentials->native.pid;
 #elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
   ret = credentials->native.cmcred_pid;
@@ -512,7 +512,7 @@ g_credentials_set_unix_user (GCredential
   g_return_val_if_fail (error == NULL || *error == NULL, FALSE);
 
   ret = FALSE;
-#ifdef __linux__
+#if defined(__linux__) || defined(__CYGWIN__)
   credentials->native.uid = uid;
   ret = TRUE;
 #elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
--- origsrc/glib-2.36.4/gio/gsocket.c	2013-08-07 09:34:32.000000000 -0500
+++ src/glib-2.36.4/gio/gsocket.c	2013-10-21 13:12:37.530001200 -0500
@@ -4349,10 +4349,10 @@ g_socket_get_credentials (GSocket   *soc
 
   ret = NULL;
 
-#if defined(__linux__) || defined(__OpenBSD__)
+#if defined(__linux__) || defined(__OpenBSD__) || defined(__CYGWIN__)
   {
     socklen_t optlen;
-#if defined(__linux__)
+#if defined(__linux__) || defined(__CYGWIN__)
     struct ucred native_creds;
     optlen = sizeof (struct ucred);
 #elif defined(__OpenBSD__)
@@ -4376,7 +4376,7 @@ g_socket_get_credentials (GSocket   *soc
       {
         ret = g_credentials_new ();
         g_credentials_set_native (ret,
-#if defined(__linux__)
+#if defined(__linux__) || defined(__CYGWIN__)
                                   G_CREDENTIALS_TYPE_LINUX_UCRED,
 #elif defined(__OpenBSD__)
                                   G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED,
